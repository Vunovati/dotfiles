unbind C-b
set -g prefix C-a
bind C-a send-prefix

# recover lost ctrl-a readline shortcut
# tell tmux that Prefix+a should send the prefix key to the program running in the current pane
bind a send-prefix

# zsh is kinda tight
set-option -g default-shell $SHELL

bind-key C-a last-window

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'
# Bring back kill line under tmux prefix
bind C-k send-keys 'C-k'

# Sane scrolling
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Have new windows and panes open in the current directory
bind c   new-window   -c '#{pane_current_path}'
# use + - instead of % " for splitting
bind | split-window -c '#{pane_current_path}' -h # Split panes horizontal
bind - split-window -c '#{pane_current_path}' # Split panes vertically

# Have new windows and panes open in the current directory
#bind '"' split-window -c '#{pane_current_path}'
#bind %   split-window -c '#{pane_current_path}' -h
#bind c   new-window   -c '#{pane_current_path}'

set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# Just click it
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
#set-option -g mouse-resize-pane on
# enable for iTerm (Terminal.app doesn't have mouse support)
set -g mouse on

# improve colors
# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set-window-option -g mode-keys vi

set -g base-index 1

# Fix bugs
#---------
# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 50

# bind-key -n C-c run "tmux show-buffer | xclip -selection clipboard -i"

# tmux messages are displayed for 4 seconds
set -g display-time 4000 

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5 

# disable programs changing window names via terminal escape sequence
set-window-option -g allow-rename off

# status bar
#set -g status-style fg=white bg=colour234
# current session
set -g status-left ' #S '
set -g status-left-length 15
# window list
set -g window-status-format "#[fg=white] #I #[fg=colour231]#W#[fg=red]#F "
set -g window-status-current-format "#[fg=colour117,bg=blue] #I #[fg=colour231]#W#[fg=colour234]#F "
# Battery using tmux-battery plugin Online status indicator using online plugin
set -g status-right '#{battery_status_fg} batt: #{battery_percentage} #{battery_remain} | %h-%d %H:%M '

set -g focus-events on

#Last saved environment is automatically restored when tmux is started
set -g @continuum-restore 'on'

# List of plugins
# Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "                \
  tmux-plugins/tpm                   \
  tmux-plugins/tmux-yank             \
  tmux-plugins/tmux-open             \
  tmux-plugins/tmux-battery             \
  tmux-plugins/tmux-prefix-highlight \
"
# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell ~/.tmux/plugins/tpm/tpm

